@page "/products/add"
@using System.ComponentModel.DataAnnotations
@using Congo.Contracts.Requests.Products
@inject IDialogService DialogService
@inject ICongoSellerClient sellerClient


@if (DidSave)
{
    <MudAlert Severity="Severity.Success" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(false))">Product was saved successfully!</MudAlert>
}

<EditForm Model="@Product" OnValidSubmit="@AddProduct">
    <DataAnnotationsValidator />
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h6">Add a Product</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudForm @ref="form">
                <MudTextField @bind-Value="Product.Name" Label="Name" Required="true" RequiredError="Product name is required" />
                <MudTextField @bind-Value="Product.Description" Label="Description" Required="true" RequiredError="Product description is required" />
                <MudNumericField @bind-Value="Product.Price" Label="Price" Required="true" Variant="Variant.Text" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" HideSpinButtons="true" />
                <MudTextField @bind-Value="Product.ImageUrl" Label="Image Url" Required="true" RequiredError="Product image url is required" />
            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => AddProduct())" Class="ml-auto">Save</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {
    MudForm form;
    InsertProductRequest Product = new InsertProductRequest();

    private bool DidSave { get; set; }

    private void CloseMe(bool value)
    {
        if (value) DidSave = false;
    }

    private async Task AddProduct()
    {
        
        var product = await sellerClient.CreateProduct(Product);

        if (product.IsSuccessStatusCode) DidSave = true;// show a success message

        StateHasChanged();
        //ToDO : Add logic to return the Guid to the DialogBox
        System.Diagnostics.Debug.Write(product.ToString());

    }

    private void OpenDialog()
    {
        DialogService.Show<AddProductDialog>("Confirm Order");
    }

}
